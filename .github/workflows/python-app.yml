# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Download PANDAseq source
      run: wget https://github.com/neufeld/pandaseq/archive/refs/tags/v2.11.zip

    - name: Extract PANDAseq source
      run: unzip v2.11.zip

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libtool automake zlib1g-dev libbz2-dev pkg-config

    - name: Build PANDAseq
      run: |
        cd pandaseq-2.11
        ./autogen.sh
        ./configure
        make

    - name: Install PANDAseq
      run: sudo make install

    - name: Build application with PyInstaller
      run: pyinstaller easydiver.spec --noconfirm

    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: easydiver
        path: dist/  # Adjust this path to where PyInstaller places your output

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: easydiver
          path: ./dist

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release notes for ${{ github.ref }}.
          draft: false
          prerelease: false
          files: ./dist/EasyDiver2.app  # Adjust to include the correct files
